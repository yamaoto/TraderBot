version: '2.2'
services:
  ravendb:
    image: ravendb/ravendb:ubuntu-latest
    ports:
      - "8080:8080"
  email:
    build:
      context: .
      dockerfile: TraderBot.EmailListener/Dockerfile
    ports:
      - '0.0.0.0:5226:5226'
    environment:
      ASPNETCORE_URLS: 'http://+:5226'
      DEPENDENCY__ORDERCONTROLLERSERVICEENDPOINT: 'http://order:5111'
      RAVENDB__ENDPOINT: http://ravendb:8080
    restart: on-failure
  binance:
    build:
      context: .
      dockerfile: TraderBot.BinanceConnect/Dockerfile
    ports:
      - '0.0.0.0:5167:5167'
    environment:
      ASPNETCORE_URLS: 'http://+:5167'
      RAVENDB__ENDPOINT: http://ravendb:8080
    restart: on-failure
  order:
    build:
      context: .
      dockerfile: TraderBot.OrderController/Dockerfile
    ports:
      - '0.0.0.0:5111:5111'
    environment:
      ASPNETCORE_URLS: 'http://+:5111'
      BINANCE__USETESTNET: true
      TELEGRAM__DEFAULTCHATID: ${TELEGRAM_CHAT}
      DEPENDENCY__SpotServiceEndpoint: 'http://binance:5167'
      RAVENDB__ENDPOINT: http://ravendb:8080
      TELEGRAM__URL: 'https://api.telegram.org/${TELEGRAM_KEY}'
    restart: on-failure
  admin:
    build:
      context: .
      dockerfile: TraderBot.Admin/Dockerfile
    ports:
      - '0.0.0.0:5258:5258'
    environment:
      ASPNETCORE_URLS: 'http://+:5258'
      RAVENDB__ENDPOINT: http://ravendb:8080
    restart: on-failure
  view:
    build:
      context: ./trader-bot-view
    ports:
      - "0.0.0.0:5173:80"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "0.0.0.0:9090:9090"
  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - "0.0.0.0:3000:3000"
    restart: unless-stopped
#    volumes:
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#      - grafana-data:/var/lib/grafana